신규 그리드 매매 전략

1.사용보조지표
 (1).볼린저밴드 길이 30기준 상단 하단 이평선 정보.
 (2).RSI 정보 길이 14기준.

2.결과물
 (1).운영파일: 실제로 운영서버에서 돌릴버젼 
     파일명 4.GateIO_F_Grid_Danta.py
 (2).테스트파일: 테스트파일은 해당코인의 5분봉데이터를 미리 받아두고 from to 기간을 지정해서 시뮬레이션용. 
     파일명 4.GateIO_F_Grid_Danta_Test.py

3.그리드 설정 방식:
 (0).레버리지는 10배로 하고 크로스 모드로 진행.
 (1).최초진입 시 총 코인갯수로 전체자산을 1/N 하고 그 금액에서 1%를 1차매수로 진입. 1차매수금액을 json 으로 관리하여 10차 매수까지 해당 금액을 기준으로 매수.해당 포지션 완전 종료 시 다시 매수금액 산정
 (2).RSI의 등급을 코드화해서 관리해줘 (ex: RSI가 25이하이면서 20초과이면 1레벨, RSI가 20이하이면서 15초과면 2레벨, 15이하이면서 10초과면 3레벨, 10이하이면 4레벨)
 (3).매수금액은 1%를 기준으로 하고 레버리지 10배를 적용. 그리고  RSI에 따라 가산할것임. 
    (ex: DOGE코인에 5000 USDT 할당 후 1%인 50 USDT의 10배인 500 USDT를 매수 근데 여기에 RSI가 25이하이면서 20초과이면 1, RSI가 20이하이면서 15초과면 1.1, 15이하이면서 10초과면 1.2, 10이하이면 1.3을 곱하여 가산함)
 (4).또한 RSI가산 적용 후 진입 차수에 따른 가산 진행
    (ex: 위 예시의 경우 1%의 10배 500USDT 에서 RSI 10이하라 1.3 가산한 650USDT 에다  , 1차부터 3차는 1(그대로), 4차부터 6차는 (1.2), 7차부터 10차는 (1.3)를 곱하여 가산함. 4차라고 가정하면 650USDT에 1.2를 곱하여 총 780USDT 매수)
 (5).현재 회차에 대한 정보를 json에서 관리해야함. 예를 들어 5차까지 매수한상태에선 회차정보에 5였다가 반등해서 30이평을 상향돌파하면 매도로직에 해당 30이평보다 작을때 매수한 회차를 익절처리하는데 이때 2,4,5 회차를 익절했다면 현재회차변수는 
     5-3 = 2회차로 들고있어야하고 json에서 관리하는 회차별 매수정보를 수정하여 1회차와 3회차만남았지만 3회차를 매도처리해서 비어있는 2회차로 옮겨주는 작업이 필요함 그래서 그후 다시 매수를하면 3회차부터 매수 시작.

4.매수조건
 (1).1회차는 전 캔들 종가가 RSI 25미만 AND 볼밴 하단선보다 종가가 낮아야함. 그러면 1회차씩 진입.
 (2).2차 부터는 매수의 경우가 2가지 있어 
    [1]1차매수 후 RSI가 다시 25이상으로 올라갔다 다시 (1)매수조건에 해당하면 매수(마지막 매수 시점정보(FinalBuyTime)를 기록해놨다가 그시점이후에 rsi가 25이상이였던캔들이 있는지 확인. 있다면 다시 rsi가 내려온걸로 처리)
    [2]1차매수 보다 RSI 레벨이 높아지고 AND 볼밴 하단선보다 종가가 낮으면 매수가능 (ex: rsi가 23이라 1차매수를 했다면 바로 다음 캔들에 동일하게 1레벨 이면 매수 안하고 2레벨이면서 볼밴 하단선보다 종가 낮으면 매수. 예를들어 17 이면 매수함.)

5.매도조건:
 (1).2차매수 이상 포지션:이전 캔들이 시가는 30이평 밑에서 종가는 30이평위해서 했다면 해당 30이평보다 밑에서 매수한 차수의 코인갯수는 익절.
     (ex: 5차까지 매수상태에서 2,4,5회차가 30이평보다 매수가가 낮다면 해당 갯수만큼 매도. 그 후 json에 매도하지않은 3차매수정보를 2차로 변경처리하고 3차부터는 다시 공란. 현재 매수차수는 2로 변경처리)
 (2).공통조건: 전캔들이 볼밴상단 보다 종가가 크면 현재포지션의 평단가(거래소평단가 말고 json 관리되는 총 차수의 평단가)와 비교하여 익절이면 남은 물량 전체 매도. 
     볼밴 상단이 전체 평단기준은 손절이나 남은 각회차를 비교하여 익절인 회차가 있으면 해당회차 물량만큼만 매도.
 (3).로직상 손절로직은 없으며 유일한 손절은 해당코인의 unRealizedPnl이 50%가 되면 해당 코인 포지션 전체 매도 진행.

7.알림
 (1).매수매도 시 알림(매수가격, 수량, 시점, 매수차수, 매도가격, 매도사유,해당포지션 총 P&L(미실현과 실현 합산) )
 (2).운영은 log출력 후 알림발송(telegram_alert.SendMessage(msg)), 개발은 동일내용 log만 출력.

8.json 파일 관리 정보
 (1).코인별 각 회차 정보: 수량, 매수가격, 매수시점(rsi 25위로 올라갔다 다시내려온건지 확인용)
 (2).코인별 전체정보: 전체평단가(매수매도 후 직접계산. 각 회차별 수량및 평단가로 계산), 현재매수차수

9.기타
 (1).모듈화를 좀 잘해줬으면 좋겠어. 예를들어 매수매도 시 json 데이터관리 함수를 따로 빼고 알림 함수 따로 빼고(알림은 운영버젼에만 있으면 돼)